services:
  bankly-api:
    container_name: bankly-api
    build:
      context: .
      dockerfile: Web/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=4000
    ports:
      - "4000:4000"
    depends_on:
      - bankly-db
    networks:
      - bankly-network
  bankly-cache:
    image: redis:latest
    container_name: bankly-cache
    restart: unless-stopped
    volumes:
      - redis-volume_data:/data
    ports:
      - "6379:6379"
    networks:
      - bankly-network
  bankly-mq:
    image: rabbitmq:management
    container_name: bankly-mq
    hostname: bankly-mq
    restart: unless-stopped
    ports:
      - "15672:15672"
    volumes:
      - rabbitmq-volume_data:/var/lib/rabbitmq
      - rabbitmq-volume_log:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - bankly-network
  bankly-db:
    image: mongo:latest
    container_name: bankly-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "8000:27017"
    volumes:
      - ./database:/data/db
    networks:
      - bankly-network
  bankly-db-dashboard:
    image: mongo-express:latest
    container_name: bankly-db-dashboard
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: bankly-db
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
    ports:
      - "8001:8081"
    networks:
      - bankly-network

networks:
  bankly-network:
    name: bankly-network

volumes:
  redis-volume_data:
  rabbitmq-volume_data:
  rabbitmq-volume_log:
  bankly-db:
    driver: local
